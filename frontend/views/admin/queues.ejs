<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= title %> - Bank Queue System</title>
  <link rel="stylesheet" href="/css/admin.css">
  <style>
    .queue-container {
      display: grid;
      grid-template-columns: 1fr 1fr;
      gap: 20px;
      margin-top: 20px;
    }
    .queue-section {
      background: #fff;
      border-radius: 8px;
      padding: 20px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    .queue-card {
      border: 1px solid #ddd;
      border-radius: 4px;
      padding: 15px;
      margin-bottom: 10px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .queue-waiting { background-color: #fff3cd; }
    .queue-called { background-color: #d4edda; }
    .queue-completed { background-color: #f8f9fa; }
    .queue-actions {
      display: flex;
      gap: 10px;
    }
    .teller-select {
      padding: 5px;
      border-radius: 4px;
      border: 1px solid #ddd;
    }
  </style>
</head>
<body>
  <%- include('../partials/admin-header', { user }) %>

  <div class="admin-container">
    <%- include('../partials/admin-sidebar') %>

    <main class="content">
      <h1><%= title %></h1>
      
      <div class="queue-actions">
        <button id="resetBtn" class="btn-danger">Reset All Queues</button>
      </div>

      <div class="queue-container">
        <div class="queue-section">
          <h2>Active Queues</h2>
          <div id="activeQueues">
            <% activeQueues.forEach(queue => { %>
              <div class="queue-card queue-<%= queue.status === 'Dipanggil' ? 'called' : 'waiting' %>">
                <div>
                  <strong>Queue #<%= queue.queue_number %></strong>
                  <% if (queue.teller_name) { %>
                    <div>Teller: <%= queue.teller_name %></div>
                  <% } %>
                  <div>Status: <%= queue.status %></div>
                </div>
                <div class="queue-actions">
                  <% if (queue.status === 'Menunggu') { %>
                    <select class="teller-select" data-queue-id="<%= queue.id %>">
                      <option value="">Select Teller</option>
                      <% tellers.forEach(teller => { %>
                        <option value="<%= teller.id %>"><%= teller.name %></option>
                      <% }) %>
                    </select>
                    <button class="btn-call" data-queue-id="<%= queue.id %>">Call</button>
                  <% } else if (queue.status === 'Dipanggil') { %>
                    <button class="btn-complete" data-queue-id="<%= queue.id %>">Complete</button>
                  <% } %>
                </div>
              </div>
            <% }) %>
          </div>
        </div>

        <div class="queue-section">
          <h2>All Queues</h2>
          <div id="allQueues">
            <% allQueues.forEach(queue => { %>
              <div class="queue-card queue-<%= queue.status === 'Selesai' ? 'completed' : 
                                            queue.status === 'Dipanggil' ? 'called' : 'waiting' %>">
                <div>
                  <strong>Queue #<%= queue.queue_number %></strong>
                  <% if (queue.teller_name) { %>
                    <div>Teller: <%= queue.teller_name %></div>
                  <% } %>
                  <div>Status: <%= queue.status %></div>
                  <div>Created: <%= new Date(queue.created_at).toLocaleString() %></div>
                </div>
              </div>
            <% }) %>
          </div>
        </div>
      </div>
    </main>
  </div>

  <script>
    // Call Queue
    document.querySelectorAll('.btn-call').forEach(btn => {
      btn.addEventListener('click', async function() {
        const queueId = this.dataset.queueId;
        const tellerSelect = document.querySelector(`.teller-select[data-queue-id="${queueId}"]`);
        const tellerId = tellerSelect.value;

        if (!tellerId) {
          alert('Please select a teller');
          return;
        }

        try {
          const response = await fetch('/admin/queues/call', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ queueId, tellerId })
          });

          const result = await response.json();
          if (result.success) {
            location.reload();
          } else {
            alert('Failed to call queue');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred');
        }
      });
    });

    // Complete Queue
    document.querySelectorAll('.btn-complete').forEach(btn => {
      btn.addEventListener('click', async function() {
        const queueId = this.dataset.queueId;

        if (!confirm('Complete this queue?')) return;

        try {
          const response = await fetch('/admin/queues/complete', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ queueId })
          });

          const result = await response.json();
          if (result.success) {
            location.reload();
          } else {
            alert('Failed to complete queue');
          }
        } catch (error) {
          console.error('Error:', error);
          alert('An error occurred');
        }
      });
    });

    // Reset All Queues
    document.getElementById('resetBtn').addEventListener('click', async function() {
      if (!confirm('Reset all queues to waiting status?')) return;

      try {
        const response = await fetch('/admin/queues/reset', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        });

        const result = await response.json();
        if (result.success) {
          location.reload();
        } else {
          alert('Failed to reset queues');
        }
      } catch (error) {
        console.error('Error:', error);
        alert('An error occurred');
      }
    });
  </script>
</body>
</html>